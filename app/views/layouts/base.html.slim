doctype html
html lang=current_language
  head
    meta charset="utf-8"
    meta http-equiv="X-UA-Compatible" content="IE=edge"
    title== html_title
    meta name="description" content=Redmine::Info.app_name
    meta name="keywords" content="issue,bug,tracker"

    = csrf_meta_tag
    = favicon
    
    = stylesheet_link_tag 'jquery/jquery-ui-1.11.0', 'application', 'responsive', :media => 'all'
    = stylesheet_link_tag 'rtl', :media => 'all' if l(:direction) == 'rtl'

    = javascript_heads
    = heads_for_theme

    = javascript_include_tag "foundation_theme/application"
    = javascript_include_tag "pops_redmine_engine/application"
    = stylesheet_link_tag "foundation_theme/application"
    = stylesheet_link_tag "pops_redmine_engine/application"
    
    = call_hook :view_layouts_base_html_head
    = yield :header_tags
  body class=(h body_css_classes)

    nav.top-bar.fixed-top
      section.top-bar-section data-topbar=""
        ul.title-area
          li.name
            h1
              = link_to Setting.app_title, home_path

        = render_menu :top_menu, nil, {class: "left"} if User.current.logged? || !Setting.login_required?


        ul.right
          - if User.current.logged? || !Setting.login_required? 
            li.quick-search
              div
                = form_tag({:controller => 'search', :action => 'index', :id => @project}, :method => :get ) do
                  = hidden_field_tag 'scope', default_search_project_scope, :id => nil
                  = hidden_field_tag(controller.default_search_scope, 1, :id => nil) if controller.default_search_scope
                  = text_field_tag 'q', @question, :size => 20, :class => 'small', :accesskey => accesskey(:quick_search), placeholder: l(:label_search)
          li.jumpbox-container
            = render_public_project_jump_box
          - if User.current.logged?
            li
            li.has-dropdown.not-click
              = link_to User.current, "#", "data-dropdown" => "drop1"
              = render_menu :account_menu, nil, {class: "dropdown", id: "drop1", "data-dropdown-content" => ""}
          - else
            li
              = render_menu :account_menu, nil

    #aside class=(display_main_menu?(@project) ? "" : "hide")
      .hide-for-small
        .sidebar
          - if display_main_menu?(@project)
            nav
              = render_main_menu(@project, { class: "sidebar-menu" })
          / = yield :sidebar
          = view_layouts_base_sidebar_hook_response
    #content class=(display_main_menu?(@project) ? "" : "merge-left")
      = render_flash_messages
      = yield
      = call_hook :view_layouts_base_content
      div[style="clear:both;"]
  #ajax-indicator[style="display:none;"]
    span
      = l(:label_loading)
  #ajax-modal[style="display:none;"]
= call_hook :view_layouts_base_body_bottom
